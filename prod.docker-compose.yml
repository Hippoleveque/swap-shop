version: "3.3"

services:
  # Database-related

  database:
    image: postgres:12.2-alpine
    restart: always
    env_file:
      - .env
    volumes:
      - database:/var/lib/postgresql/data

  # Service-related

  api:
    build:
      context: ./api
      dockerfile: prod.Dockerfile
      args:
        FLASK_API_VERSION: ${FLASK_API_VERSION}
    restart: always
    volumes:
      - api_logs:/logs
      - api_migrations:/migrations
    env_file:
      - .env
    environment:
      FLASK_LEVEL: "dev" # dev, test or prod
      LOG_LEVEL: "DEBUG" # DEBUG, INFO, WARNING or ERROR
    depends_on:
      - database

  app:
    build:
      context: ./app
      dockerfile: prod.Dockerfile
    restart: always
    environment:
      NODE_ENV: "production"
      CHOKIDAR_USEPOLLING: "false"

  # We set-up NGINX to have a unique endpoint for app & api
  nginx:
    build:
      context: ./nginx
      dockerfile: prod.Dockerfile
    restart: always
    ports:
      - "8080:80"
    volumes:
      - nginx_logs:/var/log/nginx
    depends_on:
      - api
      - app

volumes:
  api_logs:
  nginx_logs:
  database:
  api_migrations:
version: "3.3"

services:
  # Database-related

  database:
    image: postgres:12.2-alpine
    restart: always
    env_file:
      - .env
    volumes:
      - database:/var/lib/postgresql/data

  adminer:
    image: adminer:4.7.6
    restart: always
    ports:
      - 8082:8080
    depends_on:
      - database

  # Service-related

  api:
    build: ./api
    restart: always
    volumes:
      - ./api/app:/app
      - ./logs/api:/logs
      - api_migrations:/migrations
    ports:
      - 5000:5000
    env_file:
      - .env
    environment:
      FLASK_LEVEL: "dev" # dev, test or prod
      LOG_LEVEL: "DEBUG" # DEBUG, INFO, WARNING or ERROR
    depends_on:
      - database

  app:
    build: ./app
    restart: always
    volumes:
      - ./app/app:/app
    environment:
      NODE_ENV: "development"
      CHOKIDAR_USEPOLLING: "true"

  # We set-up an NGINX to have a unique endpoint for app & api
  nginx:
    build: ./nginx
    restart: always
    ports:
      - "8080:80"
    volumes:
      - ./nginx/proxy.conf:/etc/nginx/conf.d/proxy.conf:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - api
      - app

volumes:
  database:
  api_migrations:
